<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.org.system.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="com.org.system.model.Role">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="role_code" property="roleCode" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_user" property="createUser" jdbcType="BIGINT" />
	</resultMap>
	<sql id="Base_Column_List">
		id, role_name, role_code, create_time, create_user
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from role
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from role
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.org.system.model.Role">
		insert into role (id, role_name, role_code,
		create_time, create_user)
		values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR},
		#{roleCode,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" parameterType="com.org.system.model.Role">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="roleCode != null">
				role_code,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleCode != null">
				#{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.org.system.model.Role">
		update role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleCode != null">
				role_code = #{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.org.system.model.Role">
		update role
		set role_name = #{roleName,jdbcType=VARCHAR},
		role_code = #{roleCode,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		create_user = #{createUser,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="queryRoles" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
	</select>

	<select id="getRoleListPage" resultMap="BaseResultMap"
		parameterType="com.org.system.model.Role">
		select
		<include refid="Base_Column_List" />
		from role
		where 1=1
		<if test="roleName != null and roleName != ''">
			and role_name like CONCAT(CONCAT('%', #{roleName}), '%')
		</if>
		order by create_time desc
		<if test="showCount != null and currentResult != null">
			limit
			#{currentResult,jdbcType=INTEGER},#{showCount,jdbcType=INTEGER}
		</if>
	</select>

	<select id="getRoleCountPage" resultType="java.lang.Long"
		parameterType="com.org.system.model.Role">
		select
		count(id)
		from role
		where 1=1
		<if test="roleName != null and roleName != ''">
			and role_name like CONCAT(CONCAT('%', #{roleName}), '%')
		</if>
	</select>
</mapper>